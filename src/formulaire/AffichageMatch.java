/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package formulaire;
import static dao.DatabaseService.getConnection;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import models.Utilisateur;
/**
 *
 * @author user
 */
public class AffichageMatch extends javax.swing.JFrame {

    /**
     * Creates new form AffichageMatch
     */
    public AffichageMatch() {
        initComponents();
    }

    public AffichageMatch(Utilisateur u) throws SQLException, ClassNotFoundException{
       
            initComponents();
            con = getConnection();
            u1=u;
            
            
    
}
    PreparedStatement pst; 
     Connection con;
     ResultSet rs;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 596, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  
  Utilisateur u1;
   



public class AffichageMatchs {

    /**
     * Récupère les matchups d'un tournoi et les affiche dans un JTable.
     */
    public static void afficherMatchs(Connection con, long idTournoi) throws SQLException {
        // 1. Préparer et exécuter la requête
        String sql = """
            SELECT m.numero_match,
                   j1.username AS joueur1,
                   j2.username AS joueur2
            FROM matchs m
            JOIN joueurs j1 ON m.id_joueur1 = j1.id_joueur
            JOIN joueurs j2 ON m.id_joueur2 = j2.id_joueur
            WHERE m.id_tournoi = ?
            ORDER BY m.numero_match
            """;
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setLong(1, idTournoi);
        ResultSet rs = pst.executeQuery();

        // 2. Construire le modèle de table
        Vector<String> colonnes = new Vector<>();
        colonnes.add("Match");
        colonnes.add("Rencontre");

        Vector<Vector<Object>> donnees = new Vector<>();
        while (rs.next()) {
            Vector<Object> ligne = new Vector<>();
            int num = rs.getInt("numero_match");
            String j1 = rs.getString("joueur1");
            String j2 = rs.getString("joueur2");
            ligne.add(num);
            ligne.add(j1 + " vs " + j2);
            donnees.add(ligne);
        }
        rs.close();
        pst.close();

        // 3. Créer et configurer le JTable
        DefaultTableModel model = new DefaultTableModel(donnees, colonnes) {
            // Empêcher l'édition des cellules
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        JTable table = new JTable(model);
        table.setFillsViewportHeight(true);

        // 4. Mettre dans une fenêtre
        JFrame frame = new JFrame("Matchs du tournoi " + idTournoi);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.add(new JScrollPane(table));
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
    }

    // Exemple d'appel depuis main
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            try {
                Connection con = DriverManager.getConnection(
                    "jdbc:mysql://localhost:3306/ta_base", "utilisateur", "motdepasse"
                );
                long idTournoi = 5;  // à adapter
                afficherMatchs(con, idTournoi);
                con.close();
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Erreur SQL : " + e.getMessage());
            }
        });
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AffichageMatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AffichageMatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AffichageMatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AffichageMatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AffichageMatch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
