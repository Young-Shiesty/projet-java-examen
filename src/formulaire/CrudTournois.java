/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package formulaire;

import static dao.DatabaseService.getConnection;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.DashBoardOrganisateur;
import models.Tournois;
import models.Utilisateur;

/**
 *
 * @author user                        
 */
public class CrudTournois extends javax.swing.JFrame {

    /**
     * Creates new form DashBoardOrganisateur
     */
    /*public CrudTournois() {
        initComponents();
    }
    Utilisateur u1;
    public CrudTournois(Utilisateur u) throws SQLException, ClassNotFoundException {
        initComponents();
         u1=u;
        con = getConnection();
    }

    ResultSet rs;
    Connection con;
    PreparedStatement pst;*/
    public CrudTournois() {
        initComponents();
    }
    Utilisateur u1;
    public CrudTournois(Utilisateur u) throws SQLException, ClassNotFoundException{
       
            initComponents();
            con = getConnection();
            u1=u;
            fetch();
            Loadnametournoi();
    
}
 

 private void displayMessageError(String message) {
        JOptionPane.showMessageDialog(this, message);
    } 
    
   
    PreparedStatement pst; 
     Connection con;
     ResultSet rs;
    
    public void Loadnametournoi(){
        try {
            long id = u1.getId();
            pst=con.prepareStatement("SELECT nom from tournois where id_organisateur=?");
            pst.setLong(1, id); 
            rs = pst.executeQuery();
            nom_cbx.removeAllItems();
            while(rs.next()){
                nom_cbx.addItem(rs.getString(1)); 
            }
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(CrudTournois.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
         
     }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nom_tf = new javax.swing.JTextField();
        player_tf = new javax.swing.JTextField();
        price_tf = new javax.swing.JTextField();
        inscription_tf = new javax.swing.JTextField();
        start_tf = new rojeru_san.componentes.RSDateChooser();
        end_tf = new rojeru_san.componentes.RSDateChooser();
        jPanel1 = new javax.swing.JPanel();
        search_btn = new javax.swing.JButton();
        nom_cbx = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        modifier_btn = new javax.swing.JButton();
        supprimer_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new rojeru_san.complementos.RSTableMetro();
        Gid = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Game");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Start");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("End");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Player");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Frais Inscription");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Price");

        search_btn.setText("Rechercher");
        search_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_btnActionPerformed(evt);
            }
        });

        jLabel8.setText("nom du tournoi");

        modifier_btn.setText("Modifier");
        modifier_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifier_btnActionPerformed(evt);
            }
        });

        supprimer_btn.setText("Supprimer");
        supprimer_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimer_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(19, 151, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modifier_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(nom_cbx, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(search_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(supprimer_btn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nom_cbx, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modifier_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(supprimer_btn)
                .addGap(45, 45, 45))
        );

        jTable1.setBackground(new java.awt.Color(102, 0, 51));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "Game", "DateDebut", "DateFin", "Players", "Frais", "Price"
            }
        ));
        jTable1.setColorBackgoundHead(new java.awt.Color(102, 0, 51));
        jScrollPane1.setViewportView(jTable1);

        Gid.setBackground(new java.awt.Color(204, 204, 204));
        Gid.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FIFA", "PES", "NBA2K" }));
        Gid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6))
                                        .addGap(0, 106, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(player_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(price_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(inscription_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(nom_tf))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(start_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(end_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(Gid, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(91, 91, 91)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nom_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Gid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(start_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 6, Short.MAX_VALUE)
                                .addComponent(jLabel4))
                            .addComponent(end_tf, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(player_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(inscription_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(price_tf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
   private void fetch () {
        try {
            int q;
            long id = u1.getId();
           pst = con.prepareStatement("SELECT * FROM tournois where id_organisateur=?");
           pst.setLong(1, id);
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q=rss.getColumnCount();
            
            DefaultTableModel df = (DefaultTableModel)jTable1.getModel();
            df.setRowCount(0);
            while(rs.next()){
                Vector v2 = new Vector();
                for (int a=1 ; a<=q ;a++) {
                   v2.add(rs.getString("nom"));
                   v2.add(rs.getString("type_jeux"));
                   v2.add(rs.getString("datedebut"));
                   v2.add(rs.getString("datefin"));
                   v2.add(rs.getInt("nombrejoueur"));
                   v2.add(rs.getString("fraisinscription"));
                   v2.add(rs.getString("recompense"));

                }
                df.addRow(v2);
            }
            
            
            
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(CrudTournois.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    
    
    private void search_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_btnActionPerformed
        // TODO add your handling code here:
      try {
    String nom = nom_cbx.getSelectedItem().toString();

    pst = con.prepareStatement("SELECT * FROM tournois WHERE nom = ?");
    pst.setString(1, nom);
    rs = pst.executeQuery();

    if (rs.next()) {
        nom_tf.setText(rs.getString(2));
        
        
        String typeJeu = rs.getString(3);
        Gid.setSelectedItem(typeJeu);
        start_tf.setDatoFecha(rs.getDate(4));
        end_tf.setDatoFecha(rs.getDate(5));

        player_tf.setText(rs.getString(6));
        inscription_tf.setText(rs.getString(7));
        price_tf.setText(rs.getString(8));
    } else {
        JOptionPane.showMessageDialog(this, "Tournoi introuvable");
    }
} catch (SQLException ex) {
    java.util.logging.Logger.getLogger(CrudTournois.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
}


    }//GEN-LAST:event_search_btnActionPerformed

    private void modifier_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifier_btnActionPerformed
    
   try {
    String nom = nom_cbx.getSelectedItem().toString().trim();
    String game = Gid.getSelectedItem().toString().trim();
    String playerStr = player_tf.getText().trim();
    String fraisStr = inscription_tf.getText().trim();
    String priceStr = price_tf.getText().trim();

    
    java.util.Date utilStart = start_tf.getDatoFecha();
    java.util.Date utilEnd = end_tf.getDatoFecha();

    
    if (nom.isEmpty() || game.isEmpty() || playerStr.isEmpty() || fraisStr.isEmpty() || priceStr.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs.");
        return;
    }

    
    if (utilStart == null || utilEnd == null) {
        JOptionPane.showMessageDialog(this, "Veuillez sélectionner les deux dates !");
        return;
    }

    java.util.Date aujourdHui = new java.util.Date();
    if (utilStart.before(aujourdHui)) {
        JOptionPane.showMessageDialog(this, "La date de début ne peut pas être antérieure à aujourd'hui.");
        return;
    }

    if (utilEnd.before(utilStart)) {
        JOptionPane.showMessageDialog(this, "La date de fin doit être après ou égale à la date de début !");
        return;
    }
    
    long player;
    float frais;
    long price;

    try {
        player = Long.parseLong(playerStr);
        frais = Float.parseFloat(fraisStr);
        price = Long.parseLong(priceStr);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Les champs nombre de joueurs, frais et récompense doivent être des nombres.");
        return;
    }

    if (player != 8) {
        JOptionPane.showMessageDialog(this, "Le nombre de joueurs doit être 8.");
        return;
    }

    // Conversion des dates pour SQL
    java.sql.Date start = new java.sql.Date(utilStart.getTime());
    java.sql.Date end = new java.sql.Date(utilEnd.getTime());
    
    long id = u1.getId();
    pst = con.prepareStatement(
        "UPDATE Tournois SET nom=?, type_jeux=?, datedebut=?, datefin=?, nombrejoueur=?, fraisinscription=?, recompense=? WHERE id_organisateur=?"
    );
    pst.setString(1, nom);
    pst.setString(2, game);
    pst.setDate(3, start);
    pst.setDate(4, end);
    pst.setLong(5, player);
    pst.setFloat(6, frais);
    pst.setLong(7, price);
    pst.setLong(8, id);

    int k = pst.executeUpdate();
    
    if (k == 1) {
        JOptionPane.showMessageDialog(this, "Mise à jour réussie !");
        Gid.setSelectedIndex(0);
        start_tf.setDatoFecha(null);
        end_tf.setDatoFecha(null);
        player_tf.setText("");
        inscription_tf.setText("");
        price_tf.setText("");
        nom_cbx.setSelectedIndex(-1);
        fetch(); 
        Loadnametournoi();
    } 
    else {
        JOptionPane.showMessageDialog(this, "Échec de la mise à jour.");
    }
} catch (SQLException ex) {
    java.util.logging.Logger.getLogger(CrudTournois.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
}


    }//GEN-LAST:event_modifier_btnActionPerformed

    private void supprimer_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimer_btnActionPerformed
        // TODO add your handling code here:
          try {
            // TODO add your handling code here:
            
            String nom = nom_cbx.getSelectedItem().toString();
            pst=con.prepareStatement("DELETE FROM Tournois where nom = ?");
            pst.setString(1, nom);
            
            int k = pst.executeUpdate();
            if(k==1) {
                JOptionPane.showMessageDialog(this, "Suppression reuissie");
                fetch ();
                Loadnametournoi();
            } else {
                JOptionPane.showMessageDialog(this, "Suppression echoué");
            }
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(JoueurForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_supprimer_btnActionPerformed

    private void GidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GidActionPerformed
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrudTournois.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrudTournois.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrudTournois.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrudTournois.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrudTournois().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Gid;
    private rojeru_san.componentes.RSDateChooser end_tf;
    private javax.swing.JTextField inscription_tf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private rojeru_san.complementos.RSTableMetro jTable1;
    private javax.swing.JButton modifier_btn;
    private javax.swing.JComboBox<String> nom_cbx;
    private javax.swing.JTextField nom_tf;
    private javax.swing.JTextField player_tf;
    private javax.swing.JTextField price_tf;
    private javax.swing.JButton search_btn;
    private rojeru_san.componentes.RSDateChooser start_tf;
    private javax.swing.JButton supprimer_btn;
    // End of variables declaration//GEN-END:variables
}
