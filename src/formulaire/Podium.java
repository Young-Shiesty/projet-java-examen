/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package formulaire;
//import java.awt.sql*;
import com.sun.jdi.connect.spi.Connection;
import static dao.DatabaseService.getConnection;
import java.awt.Color;
import java.awt.Font;
import java.awt.GridLayout;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import models.Utilisateur;

/**
 *
 * @author user
 */
public class Podium extends javax.swing.JFrame {

    /**
     * Creates new form Podium
     */
    public Podium() {
        initComponents();
    }
            Utilisateur u1;
            long t1;
            java.sql.Connection con;
    public Podium(Utilisateur u, long t) throws SQLException, ClassNotFoundException {
        initComponents();
         this.u1=u;
         this.t1=t;
        con = getConnection();
        setTitle("üèÜ Podium - Tournoi de jeux vid√©o");
        setSize(500, 400);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        getContentPane().setBackground(Color.decode("#1e1e2f"));
        setLayout(new GridLayout(4, 1, 10, 10));

        JLabel title = new JLabel("üéÆ Podium du Tournoi #" + t, SwingConstants.CENTER);
        title.setFont(new Font("Orbitron", Font.BOLD, 22));
        title.setForeground(Color.WHITE);
        add(title);

    
//     ResultSet rs;
    
//    PreparedStatement pst;
        try {
            long id_tournois =t1;
            
            PreparedStatement pst;
            pst = con.prepareStatement("SELECT id_vainqueur, id_2eme, id_3eme FROM podium WHERE id_tournois = ?");
            pst.setLong(1, id_tournois);
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                long id1 = rs.getLong("id_vainqueur");
                long id2 = rs.getLong("id_2eme");
                long id3 = rs.getLong("id_3eme");

                String nom1 = getNomJoueur(u1, id1);
                String nom2 = getNomJoueur(u1, id2);
                String nom3 = getNomJoueur(u1, id3);

                add(makeLabel("ü•á Champion : " + nom1, new Color(255, 215, 0)));
                add(makeLabel("ü•à Vice-champion : " + nom2, new Color(192, 192, 192)));
                add(makeLabel("ü•â Troisi√®me place : " + nom3, new Color(205, 127, 50)));

            } else {
                add(makeLabel("Aucun podium enregistr√© pour ce tournoi.", Color.RED));
            }

        } catch (SQLException e) {
            e.printStackTrace();
            add(makeLabel("Erreur lors du chargement du podium.", Color.RED));
        }
    }

    private JLabel makeLabel(String text, Color color) {
        JLabel label = new JLabel(text, SwingConstants.CENTER);
        label.setFont(new Font("Segoe UI", Font.BOLD, 18));
        label.setForeground(color);
        return label;
    }

    private String getNomJoueur(Utilisateur u, long id) throws SQLException {
        PreparedStatement pst = con.prepareStatement("SELECT username FROM joueurs WHERE id_tournois = ?");
        pst.setLong(1, id);
        ResultSet rs = pst.executeQuery();
        if (rs.next()) {
            return rs.getString("username");
        }
        return "Joueur  (#" + id + ")";
    }

  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 414, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 316, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Podium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Podium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Podium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Podium.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Podium().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
