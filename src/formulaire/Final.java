/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package formulaire;

import static dao.DatabaseService.getConnection;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Utilisateur;

/**
 *
 * @author user
 */
public class Final extends javax.swing.JFrame {

    /**
     * Creates new form Final
     */
    public Final() {
        initComponents();
    }
    
    public Final(Utilisateur u,long t) throws SQLException, ClassNotFoundException {
        initComponents();
         this.u1=u;
         this.t1=t;
        con = getConnection();
        fetch();    
        if(VerifFinal(con, t1,"Vainqueur")>0){
            apply_match2.setVisible(false);
        }
        if(VerifFinal(con, t1,"3eme")>0){
            apply_match3.setVisible(false);
        }
        if(VerifFinal(con, t1,"Vainqueur")==0 || VerifFinal(con, t1,"3eme")==0){
            podiumbtn.setVisible(false);
        }else{
            podiumbtn.setVisible(true);
        }
    }
Utilisateur u1;
    long t1;
     ResultSet rs;
    Connection con;
    PreparedStatement pst;
    
    public static int CompterMatchFinal(Connection con, long t1) throws SQLException {
               PreparedStatement pst;
               ResultSet rs;           
    int total = 0;
    long id_tournois=t1; 
    pst = con.prepareStatement("SELECT COUNT(*) AS total_final FROM final WHERE  id_tournois = ? ");
//    pst.setLong(1, id); 
    pst.setLong(1, id_tournois); 
    rs = pst.executeQuery();
    if (rs.next()) {
        total = rs.getInt("total_final");
    }
    return total;
}
    
    private void fetch (){
         try {
            int q;
            long id=t1;
            pst = con.prepareStatement("SELECT id_joueur1,id_joueur2,lastmatch FROM final WHERE id_tournois = ?");
            pst.setLong(1,id);
            rs = pst.executeQuery();
            ResultSetMetaData rss = rs.getMetaData();
            q=rss.getColumnCount();
            DefaultTableModel df = (DefaultTableModel)tableaumatchmaking.getModel();
            df.setRowCount(0);
            while(rs.next()){
                Vector v2 = new Vector();
                for (int a=1 ; a<=q ;a++) {
                   v2.add(rs.getString("id_joueur1"));
                   v2.add(rs.getString("id_joueur2"));
                   v2.add(rs.getString("lastmatch"));
                }
                df.addRow(v2);
            }
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(ListeJoueurs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }
    public static int VerifFinal(Connection con, long t1,String statu) throws SQLException {
               PreparedStatement pst;
               ResultSet rs;           
    int total = 0;
    long id_tournois=t1; 
    pst = con.prepareStatement("SELECT COUNT(*) AS total_scorefinal FROM scorefinal WHERE  id_tournois = ? and statu=?");
//    pst.setLong(1, id); 
    pst.setLong(1, id_tournois); 
    pst.setString(2,statu); 
    rs = pst.executeQuery();
    if (rs.next()) {
        total = rs.getInt("total_scorefinal");
    }
    return total;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tableaumatchmaking = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        score_p3 = new javax.swing.JTextField();
        apply_match2 = new javax.swing.JButton();
        score_p4 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        score_p5 = new javax.swing.JTextField();
        apply_match3 = new javax.swing.JButton();
        score_p6 = new javax.swing.JTextField();
        podiumbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableaumatchmaking.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        tableaumatchmaking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, "FINAL"},
                {null, null, "3rdPlace"},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Player1       vs", "Player2", "Match"
            }
        ));
        tableaumatchmaking.setFocusable(false);
        tableaumatchmaking.setSelectionBackground(new java.awt.Color(255, 0, 0));
        tableaumatchmaking.setShowHorizontalLines(true);
        tableaumatchmaking.setShowVerticalLines(true);
        tableaumatchmaking.getTableHeader().setResizingAllowed(false);
        jScrollPane2.setViewportView(tableaumatchmaking);

        jLabel4.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        jLabel4.setText("FINAL GAME:");

        jLabel5.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        jLabel5.setText("SCORE:");

        score_p3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                score_p3ActionPerformed(evt);
            }
        });

        apply_match2.setText("Apply");
        apply_match2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apply_match2ActionPerformed(evt);
            }
        });

        score_p4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                score_p4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(score_p3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(score_p4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(apply_match2)
                .addGap(55, 55, 55))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(score_p3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apply_match2)
                    .addComponent(score_p4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel9.setText("P1           P2");

        jLabel6.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        jLabel6.setText("3rd Place");

        jLabel7.setFont(new java.awt.Font("Snap ITC", 0, 12)); // NOI18N
        jLabel7.setText("SCORE:");

        score_p5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                score_p5ActionPerformed(evt);
            }
        });

        apply_match3.setText("Apply");
        apply_match3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apply_match3ActionPerformed(evt);
            }
        });

        score_p6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                score_p6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(score_p5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(score_p6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(apply_match3)
                .addGap(55, 55, 55))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(score_p5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apply_match3)
                    .addComponent(score_p6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        podiumbtn.setText("PODIUM");
        podiumbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                podiumbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(podiumbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(podiumbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void score_p3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_score_p3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_score_p3ActionPerformed

    private void apply_match2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apply_match2ActionPerformed
        try {
            long gagnant;
            long place2eme;
            String score_3 = score_p3.getText().trim();
            String score_4 = score_p4.getText().trim();
            if (!score_3.matches("\\d+") || !score_4.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Veuillez saisir uniquement des chiffres pour les scores.");
                return;
            }

            long score_33 = Long.parseLong(score_3);
            long score_44 = Long.parseLong(score_4);

            if (score_33 < 0 || score_44<0) {
                JOptionPane.showMessageDialog(this, "Pas de negatif.");
                return;
            }

            if (score_33 == score_44) {
                JOptionPane.showMessageDialog(this, "Pas de match nul.");
                return;
            }

            long id_match = 1;
            long id_tournois=t1;

            pst = con.prepareStatement("SELECT id_joueur1, id_joueur2 FROM final WHERE lastmatch ='final' AND id_tournois = ?");
            pst.setLong(1, id_tournois);
            rs = pst.executeQuery();

            if (rs.next()) {
                long id_j3 = rs.getLong("id_joueur1");
                long id_j4 = rs.getLong("id_joueur2");

                if (score_33 > score_44){
                    gagnant = id_j3;
                    place2eme =id_j4 ;
                } else {
                    gagnant = id_j4;
                    place2eme = id_j3;
                }

                JOptionPane.showMessageDialog(this, "Le gagnant est le joueur avec l'ID : " + gagnant);
                String statu="Vainqueur";
                
                PreparedStatement pstInsert = con.prepareStatement(
                    "INSERT INTO scorefinal (id_gagnant,id_tournois,score_joueur1, score_joueur2,statu) VALUES (?, ?, ?, ?, ?)"
                );
                pstInsert.setLong(1,gagnant);
                pstInsert.setLong(2, id_tournois);
                pstInsert.setLong(3, score_33);
                pstInsert.setLong(4, score_44);
                pstInsert.setString(5,statu);

                pstInsert.executeUpdate();
                pstInsert.close();

                //JOptionPane.showMessageDialog(this, "Score enregistré avec succès.");
                apply_match2.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(this, "Aucun match trouvé.");
            }
            rs.close();
            pst.close();
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_apply_match2ActionPerformed

    private void score_p4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_score_p4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_score_p4ActionPerformed

    private void score_p5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_score_p5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_score_p5ActionPerformed

    private void apply_match3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apply_match3ActionPerformed
        // TODO add your handling code here:
        try {
            long gagnant;
            long place4eme;
            String score_5 = score_p5.getText().trim();
            String score_6 = score_p6.getText().trim();
            if (!score_5.matches("\\d+") || !score_6.matches("\\d+")) {
                JOptionPane.showMessageDialog(this, "Veuillez saisir uniquement des chiffres pour les scores.");
                return;
            }

            long score_55 = Long.parseLong(score_5);
            long score_66 = Long.parseLong(score_6);

            if (score_55 < 0 || score_66<0) {
                JOptionPane.showMessageDialog(this, "Pas de negatif.");
                return;
            }

            if (score_55 == score_66) {
                JOptionPane.showMessageDialog(this, "Pas de match nul.");
                return;
            }
            long id_tournois=t1;

            pst = con.prepareStatement("SELECT id_joueur1, id_joueur2 FROM final WHERE lastmatch ='3rdplace' AND id_tournois = ?");
            pst.setLong(1, id_tournois);
            rs = pst.executeQuery();

            if (rs.next()) {
                long id_j5 = rs.getLong("id_joueur1");
                long id_j6 = rs.getLong("id_joueur2");

                if (score_55 > score_66){
                    gagnant = id_j5;
                    place4eme =id_j6;
                } else {
                    gagnant = id_j6;
                    place4eme = id_j5;
                }

                JOptionPane.showMessageDialog(this, "Le gagnant est le joueur avec l'ID : " + gagnant);
                String statu="3eme";
                
                PreparedStatement pstInsert = con.prepareStatement(
                    "INSERT INTO scorefinal (id_gagnant,id_tournois,score_joueur1, score_joueur2,statu) VALUES (?, ?, ?, ?, ?)"
                );
                pstInsert.setLong(1,gagnant);
                pstInsert.setLong(2, id_tournois);
                pstInsert.setLong(3, score_55);
                pstInsert.setLong(4, score_66);
                pstInsert.setString(5,statu);

                pstInsert.executeUpdate();
                pstInsert.close();

                //JOptionPane.showMessageDialog(this, "Score enregistré avec succès.");
                apply_match3.setVisible(false);
                podiumbtn.setVisible(true);
                
            } else {
                JOptionPane.showMessageDialog(this, "Aucun match trouvé.");
            }
            rs.close();
            pst.close();
        } catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_apply_match3ActionPerformed

    private void score_p6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_score_p6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_score_p6ActionPerformed

    private void podiumbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_podiumbtnActionPerformed
        // TODO add your handling code here:
        try {
    long id_tournois = t1;

    // 1. Récupération du vainqueur (finale)
    PreparedStatement pstGagnantFinal = con.prepareStatement(
        "SELECT id_gagnant FROM scorefinal WHERE id_tournois = ? AND statu = 'final'"
    );
    pstGagnantFinal.setLong(1, id_tournois);
    ResultSet rs = pstGagnantFinal.executeQuery();

    long id_vainqueur = 0;
    if (rs.next()) {
        id_vainqueur = rs.getLong("id_gagnant");
    }

    // 2. Récupération des joueurs de la finale
    PreparedStatement pstFinal = con.prepareStatement(
        "SELECT id_joueur1, id_joueur2 FROM final WHERE id_tournois = ? AND lastmatch = 'final'"
    );
    pstFinal.setLong(1, id_tournois);
    rs = pstFinal.executeQuery();

    long id_2eme = 0;
    if (rs.next()) {
    long j1 = rs.getLong("id_joueur1");
    long j2 = rs.getLong("id_joueur2");

    if (j1 == id_vainqueur) {
        id_2eme = j2;
    } else {
        id_2eme = j1;
    }
}

    // 3. Récupération du 3e
    PreparedStatement pstTroisieme = con.prepareStatement(
        "SELECT id_gagnant FROM scorefinal WHERE id_tournois = ? AND statu = '3rdplace'"
    );
    pstTroisieme.setLong(1, id_tournois);
    rs = pstTroisieme.executeQuery();

    long id_3eme = 0;
    if (rs.next()) {
        id_3eme = rs.getLong("id_gagnant");
    }

    // 4. Insertion dans la table podium
    if (id_vainqueur != 0 && id_2eme != 0 && id_3eme != 0) {
        PreparedStatement pstInsert = con.prepareStatement(
            "INSERT INTO podium (id_vainqueur, id_2eme, id_3eme, id_tournois) VALUES (?, ?, ?, ?)"
        );
        pstInsert.setLong(1, id_vainqueur);
        pstInsert.setLong(2, id_2eme);
        pstInsert.setLong(3, id_3eme);
        pstInsert.setLong(4, id_tournois);
        pstInsert.executeUpdate();

        JOptionPane.showMessageDialog(this, "Podium inséré avec succès !");
        this.setVisible(false);
        try {
            new Podium(u1,t1).setVisible(true);
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    } else {
        JOptionPane.showMessageDialog(this, "Impossible d’insérer le podium : données incomplètes.");
    }

} catch (SQLException ex) {
            java.util.logging.Logger.getLogger(Final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_podiumbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Final.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Final().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton apply_match2;
    private javax.swing.JButton apply_match3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton podiumbtn;
    private javax.swing.JTextField score_p3;
    private javax.swing.JTextField score_p4;
    private javax.swing.JTextField score_p5;
    private javax.swing.JTextField score_p6;
    private javax.swing.JTable tableaumatchmaking;
    // End of variables declaration//GEN-END:variables
}
